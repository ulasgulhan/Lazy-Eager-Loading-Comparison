# Generated by Django 4.2.7 on 2024-01-15 11:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codename', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('first_name', models.CharField(max_length=150)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('categoryid', models.AutoField(db_column='CategoryID', primary_key=True, serialize=False)),
                ('categoryname', models.TextField(blank=True, db_column='CategoryName', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('picture', models.BinaryField(blank=True, db_column='Picture', null=True)),
            ],
            options={
                'db_table': 'Categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customerdemographics',
            fields=[
                ('customertypeid', models.TextField(db_column='CustomerTypeID', primary_key=True, serialize=False)),
                ('customerdesc', models.TextField(blank=True, db_column='CustomerDesc', null=True)),
            ],
            options={
                'db_table': 'CustomerDemographics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customerid', models.TextField(blank=True, db_column='CustomerID', primary_key=True, serialize=False)),
                ('companyname', models.TextField(blank=True, db_column='CompanyName', null=True)),
                ('contactname', models.TextField(blank=True, db_column='ContactName', null=True)),
                ('contacttitle', models.TextField(blank=True, db_column='ContactTitle', null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('region', models.TextField(blank=True, db_column='Region', null=True)),
                ('postalcode', models.TextField(blank=True, db_column='PostalCode', null=True)),
                ('country', models.TextField(blank=True, db_column='Country', null=True)),
                ('phone', models.TextField(blank=True, db_column='Phone', null=True)),
                ('fax', models.TextField(blank=True, db_column='Fax', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
                ('action_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('employeeid', models.AutoField(db_column='EmployeeID', primary_key=True, serialize=False)),
                ('lastname', models.TextField(blank=True, db_column='LastName', null=True)),
                ('firstname', models.TextField(blank=True, db_column='FirstName', null=True)),
                ('title', models.TextField(blank=True, db_column='Title', null=True)),
                ('titleofcourtesy', models.TextField(blank=True, db_column='TitleOfCourtesy', null=True)),
                ('birthdate', models.DateField(blank=True, db_column='BirthDate', null=True)),
                ('hiredate', models.DateField(blank=True, db_column='HireDate', null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('region', models.TextField(blank=True, db_column='Region', null=True)),
                ('postalcode', models.TextField(blank=True, db_column='PostalCode', null=True)),
                ('country', models.TextField(blank=True, db_column='Country', null=True)),
                ('homephone', models.TextField(blank=True, db_column='HomePhone', null=True)),
                ('extension', models.TextField(blank=True, db_column='Extension', null=True)),
                ('photo', models.BinaryField(blank=True, db_column='Photo', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
                ('photopath', models.TextField(blank=True, db_column='PhotoPath', null=True)),
            ],
            options={
                'db_table': 'Employees',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('orderid', models.AutoField(db_column='OrderID', primary_key=True, serialize=False)),
                ('orderdate', models.DateTimeField(blank=True, db_column='OrderDate', null=True)),
                ('requireddate', models.DateTimeField(blank=True, db_column='RequiredDate', null=True)),
                ('shippeddate', models.DateTimeField(blank=True, db_column='ShippedDate', null=True)),
                ('freight', models.TextField(blank=True, db_column='Freight', null=True)),
                ('shipname', models.TextField(blank=True, db_column='ShipName', null=True)),
                ('shipaddress', models.TextField(blank=True, db_column='ShipAddress', null=True)),
                ('shipcity', models.TextField(blank=True, db_column='ShipCity', null=True)),
                ('shipregion', models.TextField(blank=True, db_column='ShipRegion', null=True)),
                ('shippostalcode', models.TextField(blank=True, db_column='ShipPostalCode', null=True)),
                ('shipcountry', models.TextField(blank=True, db_column='ShipCountry', null=True)),
            ],
            options={
                'db_table': 'Orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('productid', models.AutoField(db_column='ProductID', primary_key=True, serialize=False)),
                ('productname', models.TextField(db_column='ProductName')),
                ('quantityperunit', models.TextField(blank=True, db_column='QuantityPerUnit', null=True)),
                ('unitprice', models.TextField(blank=True, db_column='UnitPrice', null=True)),
                ('unitsinstock', models.IntegerField(blank=True, db_column='UnitsInStock', null=True)),
                ('unitsonorder', models.IntegerField(blank=True, db_column='UnitsOnOrder', null=True)),
                ('reorderlevel', models.IntegerField(blank=True, db_column='ReorderLevel', null=True)),
                ('discontinued', models.TextField(db_column='Discontinued')),
            ],
            options={
                'db_table': 'Products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('regionid', models.AutoField(db_column='RegionID', primary_key=True, serialize=False)),
                ('regiondescription', models.TextField(db_column='RegionDescription')),
            ],
            options={
                'db_table': 'Regions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shippers',
            fields=[
                ('shipperid', models.AutoField(db_column='ShipperID', primary_key=True, serialize=False)),
                ('companyname', models.TextField(db_column='CompanyName')),
                ('phone', models.TextField(blank=True, db_column='Phone', null=True)),
            ],
            options={
                'db_table': 'Shippers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('supplierid', models.AutoField(db_column='SupplierID', primary_key=True, serialize=False)),
                ('companyname', models.TextField(db_column='CompanyName')),
                ('contactname', models.TextField(blank=True, db_column='ContactName', null=True)),
                ('contacttitle', models.TextField(blank=True, db_column='ContactTitle', null=True)),
                ('address', models.TextField(blank=True, db_column='Address', null=True)),
                ('city', models.TextField(blank=True, db_column='City', null=True)),
                ('region', models.TextField(blank=True, db_column='Region', null=True)),
                ('postalcode', models.TextField(blank=True, db_column='PostalCode', null=True)),
                ('country', models.TextField(blank=True, db_column='Country', null=True)),
                ('phone', models.TextField(blank=True, db_column='Phone', null=True)),
                ('fax', models.TextField(blank=True, db_column='Fax', null=True)),
                ('homepage', models.TextField(blank=True, db_column='HomePage', null=True)),
            ],
            options={
                'db_table': 'Suppliers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Territories',
            fields=[
                ('territoryid', models.TextField(db_column='TerritoryID', primary_key=True, serialize=False)),
                ('territorydescription', models.TextField(db_column='TerritoryDescription')),
            ],
            options={
                'db_table': 'Territories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customercustomerdemo',
            fields=[
                ('customerid', models.OneToOneField(db_column='CustomerID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='comparison.customers')),
            ],
            options={
                'db_table': 'CustomerCustomerDemo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employeeterritories',
            fields=[
                ('employeeid', models.OneToOneField(db_column='EmployeeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='comparison.employees')),
            ],
            options={
                'db_table': 'EmployeeTerritories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('orderid', models.OneToOneField(db_column='OrderID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='comparison.orders')),
                ('unitprice', models.TextField(db_column='UnitPrice')),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('discount', models.FloatField(db_column='Discount')),
            ],
            options={
                'db_table': 'Order Details',
                'managed': False,
            },
        ),
    ]
